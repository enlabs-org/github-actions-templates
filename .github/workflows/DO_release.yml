name: Kubernetes Release App

on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string
      docker_registry:
        required: true
        type: string
      infra_path:
        required: true
        type: string
      infra_repository:
        required: true
        type: string
      infra_branch:
        required: false
        default: main
        type: string
      context:
        required: false
        type: string
        default: .
      runs_on:
        required: false
        type: string
        default: ubuntu-latest
      timeouts:
        required: false
        default: 10
        type: number
      dockerfile_path:
        required: false
        default: Dockerfile
        type: string

    secrets:
      token:
        required: true
      digitalocean_token:
        required: true
      commit_token:
        required: true
      docker_build_options:
        required: false

env:
  PROJECT: ${{ inputs.project }}
  DOCKER_REGISTRY: ${{ inputs.docker_registry }}

jobs:
  build:
    timeout-minutes: ${{ inputs.timeouts }}
    runs-on: ${{ inputs.runs_on }}
    name: Release App – Build
    steps:
      - uses: actions/checkout@v3

      - name: Get latest release
        id: last_release
        uses: oprypin/find-latest-tag@v1
        with:
          repository: ${{ github.repository }}
          releases-only: true

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.digitalocean_token }}

      - name: Login to Docker Registry
        run: doctl registry login -t ${{ secrets.digitalocean_token }} --expiry-seconds 1200

      - name: Build
        run: DOCKER_BUILDKIT=1 docker build ${{ inputs.context }} --file ${{ inputs.dockerfile_path }} --tag $DOCKER_REGISTRY/${{ env.PROJECT }}:${{ steps.last_release.outputs.tag }} ${{ secrets.docker_build_options }}

      - name: Push
        run: docker push $DOCKER_REGISTRY/${{ env.PROJECT }}:${{ steps.last_release.outputs.tag }}

  release:
    needs: build
    timeout-minutes: ${{ inputs.timeouts }}
    runs-on: ${{ inputs.runs_on }}
    name: Release App – Commit Release
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.infra_repository }}
          ref: "${{ inputs.infra_branch }}"
          token: ${{ secrets.commit_token }}

      - name: Get latest release
        id: last_release
        uses: oprypin/find-latest-tag@v1
        with:
          repository: ${{ github.repository }}
          releases-only: true

      - name: Install slu
        run: curl -fsSL https://raw.githubusercontent.com/sikalabs/slu/master/install.sh | sudo sh

      - name: Set image via slu
        run:
          slu argocd set-image -f ${{ inputs.infra_path}}/${{ env.PROJECT }}.yml
          -k image
          -v $DOCKER_REGISTRY/${{ env.PROJECT }}:${{ steps.last_release.outputs.tag }}

      - name: Check changes
        run: cat ${{ inputs.infra_path}}/${{ env.PROJECT }}.yml

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Release Bot"
          git config --global user.email "<>"

          git add ${{ inputs.infra_path}}/${{ env.PROJECT }}.yml
          git commit -m "release (${{ env.PROJECT }}): ${{ steps.last_release.outputs.tag }}"

          git push origin ${{ inputs.infra_branch }}
